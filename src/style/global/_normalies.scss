@use "./colors.scss" as *;
@use "./typography.scss" as *;
@use "../util/index" as *;

// @include flex(r, c, c);
// @include flexForPhon(Hero, cr);
// @include grid(2, 2, fr, 1rem)

:root {
    --border-radius: #{toRem(10px)};
}

*,
*::before,
*::after {
    box-sizing: border-box;
}
body {
    position: relative;
    margin: 0;
    padding: 0;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}
html,
body {
    height: 100%;
    width: 100%;
    overflow-x: hidden;
    background-color: var(--bg-clr);
}
#root {
    height: 100vh;
    width: 100vw;
    position: relative;
    background-color: var(--bg-clr);
    padding: 1rem 0;
    @include flex(r, c, c);
}
.App {
    width: 100%;
    min-height: 50%;
}
.Container {
    --container-width: 50%;
    height: 100%;
    width: var(--container-width, 90%);
    margin-inline: auto;
}
.App {
    .Container.Stage1 {
        --container-width: 30%;
    }
    // .Container.Stage2 {
    //     --container-width: 30%;
    // }
    // .Container.Stage3 {
    //     --container-width: 30%;
    // }
}
li,
ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    a {
        text-decoration: none;
    }
}
::-moz-focus-inner {
    border: none;
}
:focus {
    outline: 2px solid transparent;
}
.focus {
    --focus-shadow: 0 0 0 transparent;
    --accent-clr: var(--txt-clr);
    box-shadow: var(--focus-shadow), 0 0 0 -0.4em var(--bg-clr),
        0 0 0 -0.6em var(--accent-clr);
    transition: box-shadow 400ms cubic-bezier(0.66, -0.2, 0.27, 1.15);
}
.focus:focus-visible {
    outline: 2px solid transparent;
    box-shadow: var(--focus-shadow), 0 0 0 0.25em var(--bg-clr),
        0 0 0 0.45em var(--accent-clr);
}
img,
svg {
    // max-width: 100%;
    user-select: none;
    display: block;
}
[type="button"] {
    user-select: none;
    overflow: hidden;
    cursor: pointer;
    text-decoration: none;
    appearance: button;
    font: inherit;
}
.Button {
    min-height: 3.25rem;
    max-height: 3em;
    width: 100%;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    vertical-align: middle;
    text-align: center;
    white-space: nowrap;
    padding: max(1em, 1rem) max(2.2em, 2.2rem);
    font-size: var(--fs-100);
    font-weight: var(--fw-b);
    background-color: var(--accent-clr);
    transition: box-shadow 250ms cubic-bezier(0.66, -0.2, 0.27, 1.15);
    color: var(--accent-text-clr);
    border: none;
    border-radius: var(--border-radius);
    --focus-shadow: inset 0px -0.4rem 0 var(--accent-shadow-clr);
}
.Button:has(img, svg) {
    padding: max(0.1em, 0.1rem);
}
.Button:where(:hover, :active) {
    --focus-shadow: inset 0px -3em 0 var(--accent-shadow-clr);
}
.Button:has(img, svg):where(:hover, :active) {
    opacity: 0.7;
}
.Button:not(:last-child) {
    margin: 0 0 1rem 0;
}
.visually-hidden {
    position: absolute;
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    padding: 0 !important;
    margin: -1px !important;
    overflow: hidden !important;
    clip: rect(0, 0, 0, 0) !important;
    white-space: nowrap !important;
    border: 0 !important;
}
.accent-X-clr {
    --accent-clr: var(--accent-X-clr);
    --accent-shadow-clr: var(--clr-teal-blue-500);
}
.accent-O-clr {
    --accent-clr: var(--accent-O-clr);
    --accent-shadow-clr: var(--clr-gold-orange-600);
}
.accent-M-clr {
    --accent-clr: var(--bg-item-clr);
    --accent-shadow-clr: var(--accent-text-clr);
}
.accent-S-clr {
    --accent-clr: var(--txt-clr);
    --accent-shadow-clr: var(--clr-blue-gray-300);
}
.result {
    position: absolute;
    width: 100vw;
    height: 100vh;
    z-index: 1000;
    top: 0;
    right: 0;
    background-color: red;
}
